/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-02-21 02:06:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member.tab;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.kh.petner.member.pet.model.vo.Pet;
import com.kh.petner.member.model.vo.Member;

public final class tab1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.petner.member.pet.model.vo.Pet");
    _jspx_imports_classes.add("com.kh.petner.member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

   	 	Member mp = (Member)session.getAttribute("member"); 
    
    
	ArrayList<Pet> plist=null;

	//m이 널이 아니고, 관리자가 아니고, 펫의 권한이 있을때만 펫의 정보를 받아온다
		System.out.println("mp회원정보 : "+ mp);
	if(mp!=null && mp.getUserRoles() != 777 && mp.getUserRoles()>9){
		plist= (ArrayList<Pet>)session.getAttribute("plist");
		System.out.println("불러운 plist : "+plist);
		Pet p = plist.get(0);
		System.out.println("불러운 Pet p : "+p);
	}
		

    
    
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("    \t$(function(){\t//사라지게 하기\r\n");
      out.write("    \t\t$('div.tab_content').fadeIn();\r\n");
      out.write("    \t});\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("    \t  img {\r\n");
      out.write("\t\t    max-width: 100%;\r\n");
      out.write("\t\t    max-height: 100%;\r\n");
      out.write("\t\t}\r\n");
      out.write("    \t\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write(" \t\t\t<div id=\"tab1\" class=\"tab_content\"><br>\r\n");
      out.write(" \t\t<!-- \t<h1> tab1.jsp 임당</h1>  -->\r\n");
      out.write("                <div class=\"map_text\" style=\"width:100%;\">\r\n");
      out.write("                    <div class=\"progress-table-wrap\" style=\"text-align: center; width:100%;\" >\r\n");
      out.write("                        <form action=\"/PETNER/pDelete.me\" method=\"post\" id=\"delForm\" style=\"width:100%;\">\r\n");
      out.write("                            <div class=\"mt-10\">\r\n");
      out.write("                                <input type=\"text\" name=\"USER_EMAIL\"  \r\n");
      out.write("                                required class=\"single-input\" disabled value=\"회원 EMAIL : ");
      out.print(mp.getUserEmail() );
      out.write("\"\r\n");
      out.write("                                    style=\"background: lightgray;\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"mt-10\">\r\n");
      out.write("                                <input type=\"text\" name=\"USER_NAME\"\r\n");
      out.write("                                required class=\"single-input\" disabled value=\"이름 : ");
      out.print(mp.getUserName() );
      out.write("\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"mt-10\">\r\n");
      out.write("                                <input type=\"text\" name=\"USER_PHONE\"  required class=\"single-input\"\r\n");
      out.write("                                disabled value=\"연락처 : ");
      out.print(mp.getUserPhone() );
      out.write("\">\r\n");
      out.write("                            </div>\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("                            <!--기본적으로 등록된 펫이 없다는 메세지가 나온다.-->\r\n");
      out.write("                            \r\n");
      out.write("                            ");
 if(plist != null ) { 
      out.write("\r\n");
      out.write("                            \r\n");
      out.write("                            \t\r\n");
      out.write("                                <div class=\"container\"  style=\"margin:0;\"> \r\n");
      out.write("                                \t<div class=\"row\"> \r\n");
      out.write("                                \t\t");
 for(Pet p : plist) { 
      out.write("\r\n");
      out.write("                                \t\t<div>\r\n");
      out.write("                                \t\t<div class=\"card s-2\" style=\"width: 208px; border:1px solid black;\"> \r\n");
      out.write("                                \t\t\t<img src=\"/PETNER/resources/img/member/pet/");
      out.print(p.getPetPic() );
      out.write("\" \r\n");
      out.write("                                \t\t\t\t\t\talt=\"프로필 사진\" class=\"card-img-top\" style=\"height:248px\"> \r\n");
      out.write("                                \t\t\t<div class=\"card-body\"> <h4 class=\"card-title\">");
      out.print(p.getPetName() );
      out.write("</h4> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t                                \t\t\t<!--  <a href=\"#\" style=\"background: gray;\" class=\"genric-btn success\" onclick=\"topPet('");
      out.print( p.getPetName());
      out.write("');\">대표 설정</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<br><br>  -->\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" style=\"background: lightgray;\" class=\"genric-btn success\" onclick=\"updatePet('");
      out.print( p.getPetName());
      out.write("')\">수정</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\" style=\"background: red;\" class=\"genric-btn success\" onclick=\"deletePet('");
      out.print( p.getPetName());
      out.write("')\">삭제</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("                                \t\t\t</div> \r\n");
      out.write("                               \t\t\t</div>\r\n");
      out.write("                               \t\t\t</div>\r\n");
      out.write("                               \t\t\t");
 } 
      out.write(" <!--  for문 --> \r\n");
      out.write("                           \t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("                                \r\n");
      out.write("                                \r\n");
      out.write("                                    \r\n");
      out.write("                             \r\n");
      out.write("                            ");
} else { 
      out.write(" <!-- if문 m.getUserRoles  닫기 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<h1>등록된 펫이 없습니다. </h1>\r\n");
      out.write("                                \r\n");
      out.write("                            ");
} 
      out.write(" <!-- if else문 닫기 -->\r\n");
      out.write("                               \r\n");
      out.write("                           \t\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- 기능 버튼들 -->\r\n");
      out.write("                            \r\n");
      out.write("                            <br>\r\n");
      out.write("                            <div>\r\n");
      out.write("\t                            <a href=\"memberInfo.jsp\" style=\"background: gray;\" class=\"genric-btn success\">수정</a>\r\n");
      out.write("\t                            <a href=\"/PETNER/views/member/PET/InsertPet.jsp\" style=\"background: gray;\" class=\"genric-btn danger\">PET 등록</a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <br>\r\n");
      out.write("                            \r\n");
      out.write("                            <a href=\"#\" onclick=\"deleteMember();\" style=\"background: red;\" class=\"genric-btn danger\">회원 탈퇴</a>\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
